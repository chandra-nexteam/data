#link google colabs
https://colab.research.google.com/drive/1AMY6vEAWHTqwkb9IHYUuc9RpXuR9onQC?usp=sharing

code 
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
  
df= pd.read_csv("rumah_jaksel.csv",encoding='windows-1252')
df
df=df.drop(columns=['NAMA RUMAH'])
df

df.info()
df['HARGA']=df['HARGA']/1000000000
df

df.describe()


plt.figure(figsize=(25,25))
sns.heatmap(df.corr(),annot=True)

from sklearn.model_selection import train_test_split
X=df.drop(columns="HARGA")
y=df.HARGA

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)
X_train.shape,X_test.shape,y_train.shape,y_test.shape

from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OneHotEncoder , MinMaxScaler

numerical_pipeline=Pipeline([
    ("imputer",SimpleImputer(strategy='mean')),
    ('scaler',MinMaxScaler())
])

categorical_pipeline=Pipeline([
    ("imputer",SimpleImputer(strategy='most_frequent')),
    ('encode',OneHotEncoder())
])  
  
from sklearn.compose import ColumnTransformer  
preprocessor= ColumnTransformer([ 
    ("numeric",numerical_pipeline,['LB','LT','KT','KM','GRS']),
    ('categoric',categorical_pipeline,[])
])
  
from sklearn.neighbors import KNeighborsRegressor
pipeline=Pipeline([
        ("prep",preprocessor),
        ("algo",KNeighborsRegressor())
])
  
  
from sklearn.model_selection import GridSearchCV  
parameter = {
    "algo__n_neighbors":range(1,51,2),
    "algo__weights":['uniform','distance']
}
model=GridSearchCV(pipeline,param_grid=parameter,cv=4,n_jobs=1,verbose=1)
model.fit(X_train,y_train)
print(model.best_params_)
print(model.score(X_train,y_train),model.best_score_,model.score(X_test,y_test))
  
  
#Test
soal=pd.DataFrame({'LB':[70],
                   'LT':[84],
                   'KT':[2],
                   'KM':[1],
                   'GRS':[0],
})

prediksi=model.predict(soal)
print(prediksi)
